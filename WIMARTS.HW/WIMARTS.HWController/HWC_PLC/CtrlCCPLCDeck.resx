<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbConnectionState.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADr8AAA6/ATgFUyQAAATJSURBVHhe7Vpbbtw4EPRXECBAkA9/JMAC+dkr5Dw5TQ6T
        u+QqiwDxeiQ+RG4VJY1lub1qPiSPJymnoIkeQ3Z1s9kj8iYqMMTwarmFXQUohfRdpdxCMwFaQvt96z5I
        3EK2AEcgt51l/9bcwlUIMGPZz5lbuCoBZuT0N0uAo3BkWyoBjsYQ/fRpf1ykADG66bg/DhUg+XXA8WRj
        tAhznmC0k0OIzrnog4ud73nnIdhdgBOMMbDa4a+39/Gfv/7eZIfnDJ+1+2eDXQQI9Cw93BvRwFwaZ6MJ
        iJod0FQAgzD2ATHuvGhILb33MYS2MdE2Anwbj28xoZEOTQRIIxVjXersXrQmpFFmEXFMnKWoF8CgcXOs
        8Ut2kN9WTJtVAoTBiZ06msw9paiLAHMSO/QSLEW5AMPLhb3EUigFcHHwKE8MyhOLKs1ejueXLIFKgIC6
        zMc+egcBUJRIjV8Kc6ESwML7PmVa8P5ObDiH39/dxJsb8N0n8fqZH2/jF96X+D5+l+5ZMRcqAfx5qqnN
        +p/i17NBGwIsjX9zG39I9zzDHKgEoOlpojGd2GAWH3n1bfz2UbgHVEeJwByoBOAvMyogNVbE2/eTALKB
        Pz68LTZ+phZ6AbqWRc/n+O3NJMA6CmZxKowntVAJ0OHXHUteqaFSnr0MfvnweTw/D4/MMf8cNdDlADeI
        DdRxmRCR4WfPNzKe1EAlgPdBbKCW50Q3s6HxpAYqAQipgWoqZ4RSal6e6JLgTtXfOgK+3sr3lbKZAHzF
        JzVQwyfhT1Zm/jWbCcBCSGqglI+LnFUyFO4vpQaHJ8HZ+PPUtzhHthwGGuiSoG0jwGzoEyM3KsNSaqAU
        ALyvSYQPlZ/s4WVl2C4KNNAJwCRwKn3X/zDG/8+wZWXYIgr4xlgDvQBdyTB48OxyzItsXBM0FYCLPUkE
        nzEMsn/PPx4GtVVhWwEmGu37gEfe1E5tCwEqjWdftW/KdUMAYDWY3grZ+ldiezMHagHc4CEAZHWX+UZ4
        pul8qlu0UAtApP0M1sTY/xIbf2lyjVJv+ogsASxGQKqvuYOju7yhYJOL8pAXAQgtDxUGAwHcMUvhWtL1
        vedUlYcsAbiHJ23yYRBwkQSfpc4czYCuDC4//IksAbh9zSAJ9oMZG+Nk273sSpEzCPuUnNihfGQJEDAN
        coWICyVpUwR/I5AMvbufYgf3IlMR31UyINWTvoC8IQBr+cdISMmQjVN9dmCAEk63C6yWbG8Y4ASwFpkC
        BJhP/5M0euSoBa9xHEKInfYNUPCQpqKpQw2gE2DydNoAho8jaTgjYRRjPn+ORu7bMW1mioCcY1GGD1yf
        aAyVAPRw8jK4FgAuGUWYr4MnXOPmSG6Z4zYa7h5jBRnNv6KBa6aowvMnfMtd2ja5H1QCMM9x8+qc82jo
        mAMgAMe+5xFdxilep0BMlmlNmUvrQwchelzv0zFYGMXnGM4dvvmeAjG+8Y+a4jKnNs7rzDl7QiUAvU0B
        tkDD2V163sLrDkZSBHqTcwfOpP+xghhFSjY/BYcceQCUOYDhLnb1eUwG8CmDeoEG87M/yDAtdAKkuKS/
        rg86AQDu071GqATgNJc2Qb8yaAatOgJeC9LWejDlG4XTrk6AXPwRYDr+tvgjwHT8TRHjf4ogyvO4IBVi
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>